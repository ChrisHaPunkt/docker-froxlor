{{ if .Capabilities.APIVersions.Has "apps/v1/Deployment" }}
apiVersion: apps/v1
{{ else }}
apiVersion: extensions/v1beta1
{{ end }}
kind: Deployment
metadata:
  name: {{ include "froxlor.fullname" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "froxlor.fullname" . }}
      component: froxlor
  template:
    metadata:
      labels:
        app: {{ include "froxlor.fullname" . }}
        component: froxlor
    spec:
      {{- if .Values.podHostname }}
      hostname: {{ .Values.podHostname }}
      {{- end }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
      containers:
      - name: froxlor
        image: {{ .Values.froxlor.image.repository }}:{{ .Values.froxlor.image.tag }}
        imagePullPolicy: {{ .Values.froxlor.image.pullPolicy }}
        env:
{{- if .Values.mailrelay.enabled }}
        - name: SMTP_HOST
          value: {{ include "froxlor.fullname" . }}-mailrelay
        - name: SMTP_SENDER_ADDRESS
          value: "{{ required "mailrelay.senderAddress" .Values.mailrelay.senderAddress }}"
{{- end }}
        volumeMounts:
          - name: data
            subPath: customers
            mountPath: /var/customers
          - name: data
            subPath: system
            mountPath: /var/system
          - name: data
            subPath: root
            mountPath: /root
          - name: run
            mountPath: /run
          - name: tmp
            mountPath: /tmp
          - name: data
            subPath: log
            mountPath: /var/log
        ports:
          - name: http
            containerPort: 80
            hostPort: 80
            protocol: TCP
            {{ include "froxlor.hostIP" . }}
          - name: https
            containerPort: 443
            hostPort: 443
            protocol: TCP
            {{ include "froxlor.hostIP" . }}
          - name: admin
            containerPort: 8088
            hostPort: 8088
            protocol: TCP
            {{ include "froxlor.hostIP" . }}
          - name: ssh
            containerPort: 22
            hostPort: 2201
            protocol: TCP
            {{ include "froxlor.hostIP" . }}
          - name: ftp
            containerPort: 21
            hostPort: 21
            protocol: TCP
            {{ include "froxlor.hostIP" . }}
          - name: ftp-data-49150
            containerPort: 49150
            hostPort: 49150
            protocol: TCP
            {{ include "froxlor.hostIP" . }}
          - name: ftp-data-49151
            containerPort: 49151
            hostPort: 49151
            protocol: TCP
            {{ include "froxlor.hostIP" . }}
          - name: ftp-data-49152
            containerPort: 49152
            hostPort: 49152
            protocol: TCP
            {{ include "froxlor.hostIP" . }}
          - name: ftp-data-49153
            containerPort: 49153
            hostPort: 49153
            protocol: TCP
            {{ include "froxlor.hostIP" . }}
          - name: ftp-data-49154
            containerPort: 49154
            hostPort: 49154
            protocol: TCP
            {{ include "froxlor.hostIP" . }}
          - name: ftp-data-49155
            containerPort: 49155
            hostPort: 49155
            protocol: TCP
            {{ include "froxlor.hostIP" . }}
          - name: ftp-data-49156
            containerPort: 49156
            hostPort: 49156
            protocol: TCP
            {{ include "froxlor.hostIP" . }}
          - name: ftp-data-49157
            containerPort: 49157
            hostPort: 49157
            protocol: TCP
            {{ include "froxlor.hostIP" . }}
          - name: ftp-data-49158
            containerPort: 49158
            hostPort: 49158
            protocol: TCP
            {{ include "froxlor.hostIP" . }}
          - name: ftp-data-49159
            containerPort: 49159
            hostPort: 49159
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /
            port: admin
          periodSeconds: 5
          failureThreshold: 30
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /
            port: admin
          periodSeconds: 10
          failureThreshold: 3
          timeoutSeconds: 5
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "froxlor.fullname" . }}-storage
        - name: run
          emptyDir:
            medium: Memory
        - name: tmp
          emptyDir:
            medium: Memory
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0

# Service with external IP does not preserve the Original client ip, see bugs below :-(

#---
#
#apiVersion: v1
#kind: Service
#metadata:
#  name: {{ include "froxlor.fullname" . }}
#  labels:
#    app: {{ include "froxlor.fullname" . }}
#    component: froxlor
#  annotations:
#    service.beta.kubernetes.io/external-traffic: OnlyLocal
#spec:
#  selector:
#    app: {{ include "froxlor.fullname" . }}
#    component: froxlor
#  ports:
#  - name: http
#    targetPort: http
#    port: 80
##    nodePort: 30080
#    protocol: TCP
#  - name: https
#    targetPort: https
#    port: 443
#    protocol: TCP
#  - name: admin
#    targetPort: admin
#    port: 8088
#    protocol: TCP
#  - name: ssh
#    targetPort: ssh
#    port: 2201
#    protocol: TCP
#  type: NodePort
#  externalIPs:
#    - x.x.x.x
#  externalTrafficPolicy: Local

# https://www.asykim.com/blog/deep-dive-into-kubernetes-external-traffic-policies
# Issue dazu: https://github.com/kubernetes/kubernetes/issues/69811
# https://blog.cloudflare.com/mmproxy-creative-way-of-preserving-client-ips-in-spectrum/
# https://github.com/wallneradam/PyPortRedirector
